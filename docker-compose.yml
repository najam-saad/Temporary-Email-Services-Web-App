version: '3.8'

services:
  app:
    build: .
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DIRECT_URL=${DATABASE_URL}
      - NEXT_PUBLIC_SOCKET_URL=${NEXT_PUBLIC_SOCKET_URL}
      - NODE_ENV=${NODE_ENV:-production}
      - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}
      - MAILCOW_TZ=${MAILCOW_TZ}
    restart: unless-stopped
    depends_on:
      - postgres
      - mailcow

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=tempmail
      - POSTGRES_PASSWORD=temp_secure_pass_123
      - POSTGRES_DB=tempmail_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tempmail -d tempmail_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailcow:
    build:
      context: ./docker/mailcow
      dockerfile: Dockerfile
    ports:
      - "25:25"    # SMTP
      - "465:465"  # SMTPS
      - "587:587"  # Submission
      - "143:143"  # IMAP
      - "993:993"  # IMAPS
      - "110:110"  # POP3
      - "995:995"  # POP3S
    environment:
      - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}
      - MAILCOW_TZ=${MAILCOW_TZ}
    volumes:
      - mailcow_data:/var/lib/mailcow
    restart: unless-stopped

volumes:
  postgres_data:
  mailcow_data: 